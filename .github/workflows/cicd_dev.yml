name: eatcook dev api CI/CD script

on:
  push:
    branches: [ "dev" ]

env:
  ACTIVE_PROFILE: "dev"

permissions:
  contents: read

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Check Out The Repository
        uses: actions/checkout@v3

      - name: Caching Gradle
        uses: actions/cache@v3
        with:
          path: |
            ~/.gradle/caches
            ~/.gradle/wrapper
          key: ${{ runner.os }}-gradle-${{ hashFiles('**/*.gradle*', '**/gradle-wrapper.properties') }}
          restore-keys: |
            ${{ runner.os }}-gradle-

      - name: Set up JDK 17
        uses: actions/setup-java@v3
        with:
          java-version: '17'
          distribution: 'temurin'

      - name: Create Json
        uses: jsdaniell/create-json@v1.2.2
        with:
          name: ${{ secrets.FIREBASE_ADMIN_SDK_FILE }}
          json: ${{ secrets.FIREBASE_ADMIN_SDK }}
          dir: ${{ secrets.FIREBASE_ADMIN_SDK_DIR }}

      - name: Start Containers
        run: docker compose -f docker-compose-dev.yml up -d

      - name: Gradle Clean & Build
        run: ./gradlew :itcook-api:build

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2

      - name: Login Docker Hub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Build and push
        uses: docker/build-push-action@v3
        with:
          context: ./itcook-api
          push: true
          args: --build-arg PROFILE=$ACTIVE_PROFILE
          tags: ${{ secrets.DOCKERHUB_USERNAME }}/itcook-api-dev:${{ github.run_number }}

  deploy:
    needs: build
    runs-on: ubuntu-latest
    steps:
      - name: EC2 Docker Run
        uses: appleboy/ssh-action@master
        with:
          host: ${{ secrets.EC2_DEV_HOST }}
          username: ${{ secrets.EC2_DEV_USER }}
          password: ${{ secrets.EC2_DEV_PASSWORD }}
          port: ${{ secrets.SSH_PORT }}
          script: |
            cd app
            sudo touch .env
            echo "${{ secrets.ENV_VARS }}" | sudo tee .env > /dev/null
            docker pull ${{ secrets.DOCKERHUB_USERNAME }}/itcook-api-dev:${{ github.run_number }}
            docker stop $(docker ps -a -q)
            docker-compose up -d
            docker run --restart=unless-stopped -d -p ${{ secrets.DEV_PORT }}:${{ secrets.DEV_PORT }} --env-file .env ${{ secrets.DOCKERHUB_USERNAME }}/itcook-api-dev:${{ github.run_number }}
            docker rm $(docker ps -a -q --filter "status=exited")
            docker image prune -a -f
