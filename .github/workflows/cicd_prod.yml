name: Deploy Api Server

on:
  push:
    tags:
      - Api-v*.*.*

permissions:
  contents: read

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Check Out The Repository
        uses: actions/checkout@v3

      - name: Caching Gradle
        uses: actions/cache@v3
        with:
          path: |
            ~/.gradle/caches
            ~/.gradle/wrapper
          key: ${{ runner.os }}-gradle-${{ hashFiles('**/*.gradle*', '**/gradle-wrapper.properties') }}
          restore-keys: |
            ${{ runner.os }}-gradle-

      - name: Set up JDK 17
        uses: actions/setup-java@v3
        with:
          java-version: '17'
          distribution: 'temurin'

      - name: Get the version
        id: get_version
        run: |
          RELEASE_VERSION_WITHOUT_V="$(cut -d'v' -f2 <<< ${GITHUB_REF#refs/*/})"
          echo ::set-output name=VERSION::$RELEASE_VERSION_WITHOUT_V 

      - name: Create Json
        uses: jsdaniell/create-json@v1.2.2
        with:
          name: ${{ secrets.FIREBASE_ADMIN_SDK_FILE }}
          json: ${{ secrets.FIREBASE_ADMIN_SDK }}
          dir: ${{ secrets.FIREBASE_ADMIN_SDK_DIR }}

      - name: Start Containers
        run: docker compose -f docker-compose-dev.yml up -d

      - name: Gradle Clean & Build
        run: ./gradlew :itcook-api:build

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2

      - name: Login Docker Hub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Build and push
        uses: docker/build-push-action@v3
        with:
          context: ./itcook-api
          push: true
          tags: |
            ${{ secrets.DOCKERHUB_USERNAME }}/eatcook-api:${{ steps.get_version.outputs.VERSION }}
            ${{ secrets.DOCKERHUB_USERNAME }}/eatcook-api:latest

  deploy:
    needs: build
    runs-on: ubuntu-latest
    steps:
      - name: EC2 Docker Run
        uses: appleboy/ssh-action@master
        with:
          host: ${{ secrets.EC2_PROD_HOST }}
          username: ${{ secrets.EC2_PROD_USER }}
          password: ${{ secrets.EC2_PROD_PASSWORD }}
          port: ${{ secrets.SSH_PORT }}
          script: |
            docker login -u ${{ secrets.DOCKER_USERNAME }} -p ${{ secrets.DOCKERHUB_TOKEN }}
            docker system prune -a -f
            docker pull ${{ secrets.DOCKERHUB_USERNAME }}/eatcook-api
            docker-compose up -d
